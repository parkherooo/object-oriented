#include<iostream>
using namespace std;

class Point {
private:
	int x, y;
public:
	Point(int xx, int yy) :x(xx), y(yy) {}
	void Draw() {
		cout << "End Point(" << x << "," << y << ")" << endl << endl;
	}
};

class CShape {
private:
	int X, Y;
public:
	CShape(int x, int y) :X(x), Y(y) {}
	virtual void Draw() {
		cout << "Start Point(" << X << "," << Y << ")" << endl;
	}
};
class CLine:public CShape {
private:
	Point p;
public:
	CLine(int start_x, int start_y, int end_x, int end_y):CShape(start_x, start_y), p(end_x, end_y){}
	void Draw() {
		cout << "직선을 그린다." << endl;
		CShape::Draw();
		p.Draw();
	}
};

class CCircle:public CShape {
private:
	Point p;
public:
	CCircle(int start_x, int start_y, int end_x, int end_y):CShape(start_x, start_y),p(end_x, end_y){}
	void Draw() {
		cout << "원을 그린다. " << endl;
		CShape::Draw();
		p.Draw();
	}
};


void main() {
	CCircle a(1, 1, 5, 5);   // 좌상단점, 우하단점 좌표
	CLine b(5, 5, 9, 9);   // 좌상단점, 우하단점 좌표
	CShape* p;

	a.Draw();   // "원 그린다." 좌상단/ 우하단점 좌표 출력
	b.Draw();   // "직선 그린다." 좌상단/ 우하단점 좌표 출력

	p = new CLine(10, 10, 100, 100);
	p->Draw();   // "직선 그린다."출력, 좌상단/우하단점 좌표 출력
	p = new CCircle(100, 100, 200, 200);
	p->Draw();    // "원 그린다."출력, 좌상단/우하단점 좌표 출력
	delete p;
}
